{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","urlChange","event","console","log","target","value","setState","endpoint","auxilary","EP","state","choiceChange","choice","changeInput","input","inp","download","errCnt","window","open","hitit","a","output","loading","inpCN","opCN","input1","data","JSON","parse","error","axios","get","then","res","received","stringify","undefined","catch","err","count","put","post","delete","outchange","op","className","onChange","this","type","id","placeholder","onClick","class","for","rows","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2c573fe3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      endpoint:'https://jsonplaceholder.typicode.com/users',\r\n      choice:'GET',\r\n      input:'',\r\n      output:'',\r\n      inpCN:\"card bg-light\",\r\n      opCN:\"card bg-light\",\r\n      errCnt:0,\r\n      loading:false\r\n    }\r\n    this.auxilary={\r\n      EP:'https://jsonplaceholder.typicode.com/users',\r\n      choice:'GET',\r\n      inp:'',\r\n      op:''\r\n    }\r\n  }\r\n\r\n  urlChange=(event)=>{\r\n\r\n    console.log('Inside url changer',event.target.value)\r\n\r\n    this.setState({endpoint:event.target.value})\r\n    this.auxilary.EP=event.target.value\r\n    //this.state.endpoint=event.target.value\r\n\r\n    console.log(\"This.state.endpoint\",this.state.endpoint)\r\n\r\n  }\r\n\r\n  choiceChange=(event)=>{\r\n    console.log(\"Inside chice change\",event.target.value)\r\n\r\n    this.setState({choice:event.target.value})\r\n    this.auxilary.choice=event.target.value\r\n\r\n    console.log(\"Auxilary choice\",this.auxilary.choice)\r\n    //this.state\"\"\".choice=event.target.value\r\n\r\n    console.log(\"This.state.change\",this.state.choice)\r\n\r\n  }\r\n\r\n  changeInput=(event)=>{\r\n    console.log(\"Inside change input \",event.target.value)\r\n\r\n    this.setState({input:event.target.value})\r\n    this.auxilary.inp=event.target.value\r\n    //this.state.input=event.target.value\r\n\r\n    console.log(\"this.state.input\",this.state.input)\r\n\r\n  }\r\n\r\n  download=()=>{\r\n    this.setState({errCnt:0})\r\n    let url_download=`https://chrome.google.com/webstore/detail/moesif-orign-cors-changer/digfbfaphojjndkpccljibejjbppifbc?hl=en-US`\r\n    window.open(url_download)\r\n  }\r\n\r\n  hitit= async(event)=>{\r\n\r\n    console.log(\"Choice\",this.auxilary.choice)\r\n\r\n    console.log(\"EP\",this.auxilary.EP)\r\n\r\n    this.setState({output:\"\",loading:true})\r\n    this.setState({inpCN:\"card bg-light\"})\r\n    this.setState({opCN:\"card bg-light\"})\r\n    console.log(\"Inside hitit \",event.target.value)\r\n    let input1=this.auxilary.inp\r\n\r\n    let url_download=`https://chrome.google.com/webstore/detail/moesif-orign-cors-changer/digfbfaphojjndkpccljibejjbppifbc?hl=en-US`\r\n\r\n    //axios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\r\n\r\n    if(this.auxilary.choice===\"GET\"){\r\n      let data={}\r\n      try {\r\n        data=JSON.parse(input1)\r\n      } catch (error) {\r\n        if(input1!==\"\"){\r\n        this.setState({inpCN:\"card bg-warning\"})\r\n        }\r\n        data={}\r\n      }\r\n      axios.get(this.auxilary.EP,data)\r\n      .then(res=>{\r\n          let received=JSON.stringify(res, undefined, 4)\r\n          this.setState({output:received})\r\n      })\r\n      .catch(err=>{\r\n        let count=this.state.errCnt\r\n        count++\r\n        this.setState({errCnt:count})\r\n        this.setState({opCN:\"card bg-warning\"})\r\n        this.setState({output:err})\r\n        console.log(\"Error while fetching data\")\r\n      })\r\n    }\r\n\r\n    else if(this.auxilary.choice===\"PUT\"){\r\n\r\n      let data={}\r\n      try {\r\n        data=JSON.parse(input1)\r\n      } catch (error) {\r\n        if(input1!==\"\"){\r\n          this.setState({inpCN:\"card bg-warning\"})\r\n          }\r\n        data={}\r\n      }\r\n\r\n      axios.put(this.auxilary.EP,data)\r\n      .then(res=>{\r\n        let received=JSON.stringify(res, undefined, 4)\r\n        this.setState({output:received})\r\n      })\r\n      .catch(err=>{\r\n        let count=this.state.errCnt\r\n        count++\r\n        this.setState({errCnt:count})\r\n        this.setState({opCN:\"card bg-warning\"})\r\n        this.setState({output:err})\r\n        console.log(\"Error while fetching data\")\r\n      })\r\n\r\n\r\n    }\r\n\r\n    else if(this.auxilary.choice===\"POST\"){\r\n     \r\n      let data={}\r\n      try {\r\n        data=JSON.parse(input1)\r\n      } catch (error) {\r\n        if(input1!==\"\"){\r\n          this.setState({inpCN:\"card bg-warning\"})\r\n          }\r\n        data={}\r\n      }\r\n      axios.post(this.auxilary.EP,data)\r\n      .then(res=>{\r\n        console.log(\"Response\",res)\r\n        let received=JSON.stringify(res, undefined, 4)\r\n        this.setState({output:received})\r\n      })\r\n      .catch(err=>{\r\n        let count=this.state.errCnt\r\n        count++\r\n        this.setState({errCnt:count})\r\n        this.setState({opCN:\"card bg-warning\"})\r\n        this.setState({output:err})\r\n        console.log(\"Error while fetching data\")\r\n      })\r\n\r\n    }\r\n\r\n    else{\r\n \r\n     \r\n      axios.delete(this.auxilary.EP)\r\n      .then(res=>{\r\n        let received=JSON.stringify(res, undefined, 4)\r\n        this.setState({output:received})\r\n      })\r\n      .catch(err=>{\r\n        let count=this.state.errCnt\r\n        count++\r\n        this.setState({errCnt:count})\r\n        this.setState({opCN:\"card bg-warning\"})\r\n        this.setState({output:err})\r\n        console.log(\"Error while fetching data\")\r\n      })\r\n \r\n    }\r\n\r\n    this.setState({loading:false})\r\n    //this.setState({output:input1})\r\n    //this.setState({output:input1})\r\n    //console.log(\"Input1\",input1)\r\n    //console.log(\"Output\",this.state.output,\"Input\",this.state.input)\r\n\r\n  }\r\n\r\n  outchange=(event)=>{\r\n\r\n    let data=event.target.value\r\n\r\n    this.setState({output:data})\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n\r\n    return (\r\n    <div className=\"container-fluid bg-secondary\">\r\n\r\n\r\n      <div className=\"bg-dark text-light display-1\">\r\n          Post Online\r\n      </div>\r\n      <br/>\r\n      <div className=\"card bg-light\">\r\n        <div className=\"card-body\">\r\n          <div className=\"form-group\">\r\n\r\n            <input onChange={this.urlChange} type=\"text\" className=\"form-control\" id=\"usr\" placeholder=\"Paste Your EndPoint Here\" value=\"https://jsonplaceholder.typicode.com/users\" />\r\n            <br/>\r\n            <select onChange={this.choiceChange} className=\"form-control\" id=\"sel1\">\r\n              <option>GET</option>\r\n              <option>POST</option>\r\n              <option>PUT</option>\r\n              <option>DELETE</option>\r\n            </select>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <br/>\r\n      <button onClick={this.hitit} type=\"button\" className=\"col-12 btn btn-danger\">Hit the Endpoint</button>\r\n      <br/>\r\n      <br/>\r\n      <div className=\"jumbotron\">\r\n      {this.state.loading?<div className=\"row\">\r\n            <div className=\"col-12\">\r\n            <div class=\"alert alert-primary\">\r\n                        <strong>LOADING</strong> Hitting the api\r\n                      </div>\r\n        </div>\r\n        </div>:<div/>\r\n  }\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-12 col-lg-6 col-xl-6\">\r\n              <div className={this.state.inpCN}>\r\n                <div className=\"card-body\">\r\n                  <div className=\"form-group\">\r\n                      {this.state.inpCN!==\"card bg-light\"?<div class=\"alert alert-success\">\r\n                        <strong>OOPS</strong> Please enter a valid JSON\r\n                      </div>:<div/>}\r\n                    <label for=\"comment\">Input:</label>\r\n                    <textarea onChange={this.changeInput} className=\"form-control\" rows=\"20\" id=\"comment\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-12 col-lg-6 col-xl-6\">\r\n            <div className={this.state.opCN}>\r\n              <div className=\"card-body\">\r\n                <div className=\"form-group\">\r\n                    {this.state.errCnt>3?<button onClick={this.download} type=\"button\" className=\"col-12 btn btn-success\">Download the extension and turn on to fix some common error</button>:<div/>}\r\n                    {this.state.opCN!==\"card bg-light\"?<div class=\"alert alert-success\">\r\n                            <strong>Error</strong> Hitting the API\r\n                          </div>:<div/>}\r\n                    <label for=\"comment\">Output:</label>\r\n    <textarea onChange={this.outchange} className=\"form-control\" rows=\"20\" id=\"comment\" value={this.state.output}></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n    )\r\n\r\n\r\n  }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}